{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\HP\\\\AiAgent\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef, useCallback } from 'react';\nimport { getAIResponse, getOpenAIResponse } from './services/aiService';\n\n// Main App component for the AI Tech Support Training Website\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  // State to store the conversation history between user and AI\n  const [chatHistory, setChatHistory] = useState([]);\n  // State to store the current input from the user\n  const [userInput, setUserInput] = useState('');\n  // State to manage the loading status while waiting for AI response\n  const [isLoading, setIsLoading] = useState(false);\n  // State to control whether AI responses should be spoken aloud\n  const [isVoiceEnabled, setIsVoiceEnabled] = useState(true); // Default to voice enabled\n  // State to control which AI model to use\n  const [aiModel, setAiModel] = useState('gemini'); // 'gemini' or 'openai'\n  // Ref to automatically scroll to the latest message in the chat\n  const messagesEndRef = useRef(null);\n\n  // Effect to scroll to the bottom of the chat window whenever chatHistory changes\n  useEffect(() => {\n    if (messagesEndRef.current) {\n      messagesEndRef.current.scrollIntoView({\n        behavior: 'smooth'\n      });\n    }\n  }, [chatHistory]);\n\n  // Function to speak text using the Web Speech API\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  const speakText = useCallback(text => {\n    if (!isVoiceEnabled || !('speechSynthesis' in window)) {\n      console.warn(\"Speech synthesis not supported or voice disabled.\");\n      return;\n    }\n    const utterance = new SpeechSynthesisUtterance(text);\n    // You can customize voice, pitch, rate here if needed\n    // utterance.voice = speechSynthesis.getVoices().find(voice => voice.name === 'Google US English');\n    // utterance.pitch = 1;\n    // utterance.rate = 1;\n    speechSynthesis.speak(utterance);\n  }, [isVoiceEnabled]); // Add isVoiceEnabled as a dependency\n\n  // Function to send a message to the AI\n  const sendMessage = async () => {\n    if (userInput.trim() === '') return; // Prevent sending empty messages\n\n    const userMessage = {\n      role: 'user',\n      text: userInput\n    };\n    // Update chat history with the user's message\n    setChatHistory(prev => [...prev, userMessage]);\n    setUserInput(''); // Clear the input field\n\n    setIsLoading(true); // Set loading state to true\n\n    try {\n      // Check if API key is set\n      if (aiModel === 'gemini' && (!process.env.REACT_APP_GEMINI_API_KEY || process.env.REACT_APP_GEMINI_API_KEY === 'your_gemini_api_key_here')) {\n        throw new Error('Gemini API key is not set. Please add your API key to the .env file.');\n      }\n      if (aiModel === 'openai' && (!process.env.REACT_APP_OPENAI_API_KEY || process.env.REACT_APP_OPENAI_API_KEY === 'your_openai_api_key_here')) {\n        throw new Error('OpenAI API key is not set. Please add your API key to the .env file.');\n      }\n\n      // Determine if this is the first message\n      const isFirstMessage = chatHistory.length === 0;\n      let aiResponseText;\n\n      // Use the appropriate AI service based on the selected model\n      if (aiModel === 'openai') {\n        aiResponseText = await getOpenAIResponse(chatHistory, userInput);\n      } else {\n        // Default to Gemini\n        aiResponseText = await getAIResponse(chatHistory, userInput, isFirstMessage);\n      }\n\n      // Update chat history with the AI's response\n      setChatHistory(prev => [...prev, {\n        role: 'model',\n        text: aiResponseText\n      }]);\n\n      // Speak the AI's response\n      speakText(aiResponseText);\n    } catch (error) {\n      console.error('Error fetching AI response:', error);\n      const errorMessage = `Error: ${error.message || 'There was an error connecting to the AI. Please check your network or try again later.'}`;\n      setChatHistory(prev => [...prev, {\n        role: 'model',\n        text: errorMessage\n      }]);\n      speakText(errorMessage);\n    } finally {\n      setIsLoading(false); // Reset loading state\n    }\n  };\n\n  // Function to reset the chat\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  const resetChat = useCallback(() => {\n    // Stop any ongoing speech\n    if ('speechSynthesis' in window) {\n      speechSynthesis.cancel();\n    }\n    setChatHistory([]); // Clear all messages\n    setUserInput(''); // Clear input field\n    setIsLoading(false); // Ensure loading is false\n    // Send an initial welcome message from the AI after reset\n    const welcomeMessage = 'Hello! I am your Optimum Agent. How can I assist you with your technical issue today?';\n    setChatHistory([{\n      role: 'model',\n      text: welcomeMessage\n    }]);\n    speakText(welcomeMessage); // Speak the welcome message\n  }, [setChatHistory, setUserInput, setIsLoading]); // Removed speakText from dependencies\n\n  // Initial message from the AI when the component mounts or resets\n  useEffect(() => {\n    if (chatHistory.length === 0) {\n      resetChat(); // Call reset to set the initial welcome message and speak it\n    }\n  }, [chatHistory.length, resetChat]); // Add chatHistory.length and resetChat to the dependency array\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"min-h-screen bg-gradient-to-br from-blue-50 to-indigo-100 flex items-center justify-center p-4 font-inter\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bg-white rounded-xl shadow-2xl w-full max-w-2xl flex flex-col h-[90vh] overflow-hidden\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bg-blue-600 text-white p-4 rounded-t-xl shadow-md flex justify-between items-center\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"text-2xl font-bold\",\n          children: \"AI Tech Support Trainer\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex items-center space-x-4\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"flex items-center cursor-pointer\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"mr-2 text-white font-semibold\",\n              children: \"Voice On\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 121,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"relative\",\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"checkbox\",\n                className: \"sr-only\",\n                checked: isVoiceEnabled,\n                onChange: () => setIsVoiceEnabled(!isVoiceEnabled)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 123,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: `block w-14 h-8 rounded-full ${isVoiceEnabled ? 'bg-green-400' : 'bg-gray-400'}`\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 129,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: `absolute left-1 top-1 bg-white w-6 h-6 rounded-full transition-transform ${isVoiceEnabled ? 'transform translate-x-6' : ''}`\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 130,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 122,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 120,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex items-center\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"mr-2 text-white font-semibold\",\n              children: \"AI Model:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 136,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n              className: \"bg-blue-700 text-white border border-blue-500 rounded px-2 py-1\",\n              value: aiModel,\n              onChange: e => setAiModel(e.target.value),\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"gemini\",\n                children: \"Gemini\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 142,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"openai\",\n                children: \"OpenAI\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 143,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 137,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"ml-2\",\n              children: [aiModel === 'gemini' && /*#__PURE__*/_jsxDEV(\"span\", {\n                className: `text-xs px-2 py-1 rounded ${process.env.REACT_APP_GEMINI_API_KEY && process.env.REACT_APP_GEMINI_API_KEY !== 'your_gemini_api_key_here' ? 'bg-green-500' : 'bg-red-500'}`,\n                children: process.env.REACT_APP_GEMINI_API_KEY && process.env.REACT_APP_GEMINI_API_KEY !== 'your_gemini_api_key_here' ? 'API Key Set' : 'No API Key'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 148,\n                columnNumber: 37\n              }, this), aiModel === 'openai' && /*#__PURE__*/_jsxDEV(\"span\", {\n                className: `text-xs px-2 py-1 rounded ${process.env.REACT_APP_OPENAI_API_KEY && process.env.REACT_APP_OPENAI_API_KEY !== 'your_openai_api_key_here' ? 'bg-green-500' : 'bg-red-500'}`,\n                children: process.env.REACT_APP_OPENAI_API_KEY && process.env.REACT_APP_OPENAI_API_KEY !== 'your_openai_api_key_here' ? 'API Key Set' : 'No API Key'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 153,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 146,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 135,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: resetChat,\n            className: \"bg-blue-700 hover:bg-blue-800 text-white font-semibold py-1 px-3 rounded-lg transition-colors\",\n            children: \"Reset Chat\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 160,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex-1 p-6 overflow-y-auto custom-scrollbar\",\n        children: [chatHistory.map((message, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `mb-4 p-3 rounded-lg max-w-[80%] shadow-sm ${message.role === 'user' ? 'bg-blue-500 text-white ml-auto rounded-br-none' : 'bg-gray-200 text-gray-800 mr-auto rounded-bl-none'}`,\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"font-medium mb-1\",\n            children: [message.role === 'user' ? 'You' : 'Optimum Agent', \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 180,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: message.text\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 183,\n            columnNumber: 29\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 172,\n          columnNumber: 25\n        }, this)), isLoading && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mb-4 p-3 rounded-lg max-w-[80%] mr-auto bg-gray-200 text-gray-800 shadow-sm rounded-bl-none animate-pulse\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"font-medium mb-1\",\n            children: \"Optimum Agent\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 188,\n            columnNumber: 29\n          }, this), \" \", /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Thinking...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 189,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 187,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          ref: messagesEndRef\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 192,\n          columnNumber: 21\n        }, this), \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"p-4 bg-gray-100 border-t border-gray-200 flex items-center rounded-b-xl\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: userInput,\n          onChange: e => setUserInput(e.target.value),\n          onKeyPress: e => {\n            if (e.key === 'Enter' && !isLoading) {\n              sendMessage();\n            }\n          },\n          placeholder: \"Type your technical issue or question...\",\n          className: \"flex-1 p-3 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500 text-gray-700\",\n          disabled: isLoading\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 197,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: sendMessage,\n          className: `ml-4 px-6 py-3 rounded-lg font-semibold shadow-md transition duration-300 ease-in-out transform ${isLoading ? 'bg-gray-400 cursor-not-allowed' : 'bg-blue-600 hover:bg-blue-700 text-white hover:scale-105'}`,\n          disabled: isLoading,\n          children: \"Send\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 210,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 196,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 114,\n    columnNumber: 9\n  }, this);\n}\n_s(App, \"ZcsWkAsLOdeV+Ddq9Kti9q6PI6w=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","useRef","useCallback","getAIResponse","getOpenAIResponse","jsxDEV","_jsxDEV","App","_s","chatHistory","setChatHistory","userInput","setUserInput","isLoading","setIsLoading","isVoiceEnabled","setIsVoiceEnabled","aiModel","setAiModel","messagesEndRef","current","scrollIntoView","behavior","speakText","text","window","console","warn","utterance","SpeechSynthesisUtterance","speechSynthesis","speak","sendMessage","trim","userMessage","role","prev","process","env","REACT_APP_GEMINI_API_KEY","Error","REACT_APP_OPENAI_API_KEY","isFirstMessage","length","aiResponseText","error","errorMessage","message","resetChat","cancel","welcomeMessage","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","checked","onChange","value","e","target","onClick","map","index","ref","onKeyPress","key","placeholder","disabled","_c","$RefreshReg$"],"sources":["C:/Users/HP/AiAgent/src/App.js"],"sourcesContent":["import React, { useState, useEffect, useRef, useCallback } from 'react';\nimport { getAIResponse, getOpenAIResponse } from './services/aiService';\n\n// Main App component for the AI Tech Support Training Website\nfunction App() {\n    // State to store the conversation history between user and AI\n    const [chatHistory, setChatHistory] = useState([]);\n    // State to store the current input from the user\n    const [userInput, setUserInput] = useState('');\n    // State to manage the loading status while waiting for AI response\n    const [isLoading, setIsLoading] = useState(false);\n    // State to control whether AI responses should be spoken aloud\n    const [isVoiceEnabled, setIsVoiceEnabled] = useState(true); // Default to voice enabled\n    // State to control which AI model to use\n    const [aiModel, setAiModel] = useState('gemini'); // 'gemini' or 'openai'\n    // Ref to automatically scroll to the latest message in the chat\n    const messagesEndRef = useRef(null);\n\n    // Effect to scroll to the bottom of the chat window whenever chatHistory changes\n    useEffect(() => {\n        if (messagesEndRef.current) {\n            messagesEndRef.current.scrollIntoView({ behavior: 'smooth' });\n        }\n    }, [chatHistory]);\n\n    // Function to speak text using the Web Speech API\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    const speakText = useCallback((text) => {\n        if (!isVoiceEnabled || !('speechSynthesis' in window)) {\n            console.warn(\"Speech synthesis not supported or voice disabled.\");\n            return;\n        }\n        const utterance = new SpeechSynthesisUtterance(text);\n        // You can customize voice, pitch, rate here if needed\n        // utterance.voice = speechSynthesis.getVoices().find(voice => voice.name === 'Google US English');\n        // utterance.pitch = 1;\n        // utterance.rate = 1;\n        speechSynthesis.speak(utterance);\n    }, [isVoiceEnabled]); // Add isVoiceEnabled as a dependency\n\n    // Function to send a message to the AI\n    const sendMessage = async () => {\n        if (userInput.trim() === '') return; // Prevent sending empty messages\n\n        const userMessage = { role: 'user', text: userInput };\n        // Update chat history with the user's message\n        setChatHistory((prev) => [...prev, userMessage]);\n        setUserInput(''); // Clear the input field\n\n        setIsLoading(true); // Set loading state to true\n\n        try {\n            // Check if API key is set\n            if (aiModel === 'gemini' && (!process.env.REACT_APP_GEMINI_API_KEY || process.env.REACT_APP_GEMINI_API_KEY === 'your_gemini_api_key_here')) {\n                throw new Error('Gemini API key is not set. Please add your API key to the .env file.');\n            }\n            \n            if (aiModel === 'openai' && (!process.env.REACT_APP_OPENAI_API_KEY || process.env.REACT_APP_OPENAI_API_KEY === 'your_openai_api_key_here')) {\n                throw new Error('OpenAI API key is not set. Please add your API key to the .env file.');\n            }\n            \n            // Determine if this is the first message\n            const isFirstMessage = chatHistory.length === 0;\n            \n            let aiResponseText;\n            \n            // Use the appropriate AI service based on the selected model\n            if (aiModel === 'openai') {\n                aiResponseText = await getOpenAIResponse(chatHistory, userInput);\n            } else {\n                // Default to Gemini\n                aiResponseText = await getAIResponse(chatHistory, userInput, isFirstMessage);\n            }\n            \n            // Update chat history with the AI's response\n            setChatHistory((prev) => [...prev, { role: 'model', text: aiResponseText }]);\n            \n            // Speak the AI's response\n            speakText(aiResponseText);\n        } catch (error) {\n            console.error('Error fetching AI response:', error);\n            const errorMessage = `Error: ${error.message || 'There was an error connecting to the AI. Please check your network or try again later.'}`;\n            setChatHistory((prev) => [...prev, { role: 'model', text: errorMessage }]);\n            speakText(errorMessage);\n        } finally {\n            setIsLoading(false); // Reset loading state\n        }\n    };\n\n    // Function to reset the chat\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    const resetChat = useCallback(() => {\n        // Stop any ongoing speech\n        if ('speechSynthesis' in window) {\n            speechSynthesis.cancel();\n        }\n        setChatHistory([]); // Clear all messages\n        setUserInput('');   // Clear input field\n        setIsLoading(false); // Ensure loading is false\n        // Send an initial welcome message from the AI after reset\n        const welcomeMessage = 'Hello! I am your Optimum Agent. How can I assist you with your technical issue today?';\n        setChatHistory([{ role: 'model', text: welcomeMessage }]);\n        speakText(welcomeMessage); // Speak the welcome message\n    }, [setChatHistory, setUserInput, setIsLoading]); // Removed speakText from dependencies\n\n    // Initial message from the AI when the component mounts or resets\n    useEffect(() => {\n        if (chatHistory.length === 0) {\n            resetChat(); // Call reset to set the initial welcome message and speak it\n        }\n    }, [chatHistory.length, resetChat]); // Add chatHistory.length and resetChat to the dependency array\n\n    return (\n        <div className=\"min-h-screen bg-gradient-to-br from-blue-50 to-indigo-100 flex items-center justify-center p-4 font-inter\">\n            <div className=\"bg-white rounded-xl shadow-2xl w-full max-w-2xl flex flex-col h-[90vh] overflow-hidden\">\n                {/* Header */}\n                <div className=\"bg-blue-600 text-white p-4 rounded-t-xl shadow-md flex justify-between items-center\">\n                    <h1 className=\"text-2xl font-bold\">AI Tech Support Trainer</h1>\n                    <div className=\"flex items-center space-x-4\">\n                        <label className=\"flex items-center cursor-pointer\">\n                            <span className=\"mr-2 text-white font-semibold\">Voice On</span>\n                            <div className=\"relative\">\n                                <input\n                                    type=\"checkbox\"\n                                    className=\"sr-only\"\n                                    checked={isVoiceEnabled}\n                                    onChange={() => setIsVoiceEnabled(!isVoiceEnabled)}\n                                />\n                                <div className={`block w-14 h-8 rounded-full ${isVoiceEnabled ? 'bg-green-400' : 'bg-gray-400'}`}></div>\n                                <div className={`absolute left-1 top-1 bg-white w-6 h-6 rounded-full transition-transform ${isVoiceEnabled ? 'transform translate-x-6' : ''}`}></div>\n                            </div>\n                        </label>\n                        \n                        {/* AI Model Selector */}\n                        <div className=\"flex items-center\">\n                            <span className=\"mr-2 text-white font-semibold\">AI Model:</span>\n                            <select \n                                className=\"bg-blue-700 text-white border border-blue-500 rounded px-2 py-1\"\n                                value={aiModel}\n                                onChange={(e) => setAiModel(e.target.value)}\n                            >\n                                <option value=\"gemini\">Gemini</option>\n                                <option value=\"openai\">OpenAI</option>\n                            </select>\n                            {/* API Key Status Indicator */}\n                            <div className=\"ml-2\">\n                                {aiModel === 'gemini' && (\n                                    <span className={`text-xs px-2 py-1 rounded ${process.env.REACT_APP_GEMINI_API_KEY && process.env.REACT_APP_GEMINI_API_KEY !== 'your_gemini_api_key_here' ? 'bg-green-500' : 'bg-red-500'}`}>\n                                        {process.env.REACT_APP_GEMINI_API_KEY && process.env.REACT_APP_GEMINI_API_KEY !== 'your_gemini_api_key_here' ? 'API Key Set' : 'No API Key'}\n                                    </span>\n                                )}\n                                {aiModel === 'openai' && (\n                                    <span className={`text-xs px-2 py-1 rounded ${process.env.REACT_APP_OPENAI_API_KEY && process.env.REACT_APP_OPENAI_API_KEY !== 'your_openai_api_key_here' ? 'bg-green-500' : 'bg-red-500'}`}>\n                                        {process.env.REACT_APP_OPENAI_API_KEY && process.env.REACT_APP_OPENAI_API_KEY !== 'your_openai_api_key_here' ? 'API Key Set' : 'No API Key'}\n                                    </span>\n                                )}\n                            </div>\n                        </div>\n                        \n                        <button\n                            onClick={resetChat}\n                            className=\"bg-blue-700 hover:bg-blue-800 text-white font-semibold py-1 px-3 rounded-lg transition-colors\"\n                        >\n                            Reset Chat\n                        </button>\n                    </div>\n                </div>\n\n                {/* Chat Messages Area */}\n                <div className=\"flex-1 p-6 overflow-y-auto custom-scrollbar\">\n                    {chatHistory.map((message, index) => (\n                        <div\n                            key={index}\n                            className={`mb-4 p-3 rounded-lg max-w-[80%] shadow-sm ${\n                                message.role === 'user'\n                                    ? 'bg-blue-500 text-white ml-auto rounded-br-none'\n                                    : 'bg-gray-200 text-gray-800 mr-auto rounded-bl-none'\n                            }`}\n                        >\n                            <p className=\"font-medium mb-1\">\n                                {message.role === 'user' ? 'You' : 'Optimum Agent'} {/* Changed here */}\n                            </p>\n                            <p>{message.text}</p>\n                        </div>\n                    ))}\n                    {isLoading && (\n                        <div className=\"mb-4 p-3 rounded-lg max-w-[80%] mr-auto bg-gray-200 text-gray-800 shadow-sm rounded-bl-none animate-pulse\">\n                            <p className=\"font-medium mb-1\">Optimum Agent</p> {/* Changed here */}\n                            <p>Thinking...</p>\n                        </div>\n                    )}\n                    <div ref={messagesEndRef} /> {/* Scroll target */}\n                </div>\n\n                {/* Input Area */}\n                <div className=\"p-4 bg-gray-100 border-t border-gray-200 flex items-center rounded-b-xl\">\n                    <input\n                        type=\"text\"\n                        value={userInput}\n                        onChange={(e) => setUserInput(e.target.value)}\n                        onKeyPress={(e) => {\n                            if (e.key === 'Enter' && !isLoading) {\n                                sendMessage();\n                            }\n                        }}\n                        placeholder=\"Type your technical issue or question...\"\n                        className=\"flex-1 p-3 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500 text-gray-700\"\n                        disabled={isLoading}\n                    />\n                    <button\n                        onClick={sendMessage}\n                        className={`ml-4 px-6 py-3 rounded-lg font-semibold shadow-md transition duration-300 ease-in-out transform ${\n                            isLoading\n                                ? 'bg-gray-400 cursor-not-allowed'\n                                : 'bg-blue-600 hover:bg-blue-700 text-white hover:scale-105'\n                        }`}\n                        disabled={isLoading}\n                    >\n                        Send\n                    </button>\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}